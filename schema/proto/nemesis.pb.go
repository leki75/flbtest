// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.4
// source: schema/proto/nemesis.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol     string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Exchange   int32   `protobuf:"varint,3,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Price      float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume     uint32  `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Timestamp  uint64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Conditions []byte  `protobuf:"bytes,7,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Tape       int32   `protobuf:"varint,8,opt,name=tape,proto3" json:"tape,omitempty"`
	ReceivedAt int64   `protobuf:"varint,9,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_nemesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_nemesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_schema_proto_nemesis_proto_rawDescGZIP(), []int{0}
}

func (x *Trade) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetExchange() int32 {
	if x != nil {
		return x.Exchange
	}
	return 0
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Trade) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Trade) GetConditions() []byte {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Trade) GetTape() int32 {
	if x != nil {
		return x.Tape
	}
	return 0
}

func (x *Trade) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type TradeBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *TradeBatch) Reset() {
	*x = TradeBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_nemesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeBatch) ProtoMessage() {}

func (x *TradeBatch) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_nemesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeBatch.ProtoReflect.Descriptor instead.
func (*TradeBatch) Descriptor() ([]byte, []int) {
	return file_schema_proto_nemesis_proto_rawDescGZIP(), []int{1}
}

func (x *TradeBatch) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol      string  `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	BidExchange int32   `protobuf:"varint,2,opt,name=bidExchange,proto3" json:"bidExchange,omitempty"`
	BidPrice    float64 `protobuf:"fixed64,3,opt,name=bidPrice,proto3" json:"bidPrice,omitempty"`
	BidSize     uint32  `protobuf:"varint,4,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	AskExchange int32   `protobuf:"varint,5,opt,name=askExchange,proto3" json:"askExchange,omitempty"`
	AskPrice    float64 `protobuf:"fixed64,6,opt,name=askPrice,proto3" json:"askPrice,omitempty"`
	AskSize     uint32  `protobuf:"varint,7,opt,name=askSize,proto3" json:"askSize,omitempty"`
	Timestamp   uint64  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Conditions  []byte  `protobuf:"bytes,9,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Nbbo        bool    `protobuf:"varint,10,opt,name=nbbo,proto3" json:"nbbo,omitempty"`
	Tape        int32   `protobuf:"varint,11,opt,name=tape,proto3" json:"tape,omitempty"`
	ReceivedAt  int64   `protobuf:"varint,12,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_nemesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_nemesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_schema_proto_nemesis_proto_rawDescGZIP(), []int{2}
}

func (x *Quote) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Quote) GetBidExchange() int32 {
	if x != nil {
		return x.BidExchange
	}
	return 0
}

func (x *Quote) GetBidPrice() float64 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

func (x *Quote) GetBidSize() uint32 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *Quote) GetAskExchange() int32 {
	if x != nil {
		return x.AskExchange
	}
	return 0
}

func (x *Quote) GetAskPrice() float64 {
	if x != nil {
		return x.AskPrice
	}
	return 0
}

func (x *Quote) GetAskSize() uint32 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *Quote) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Quote) GetConditions() []byte {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Quote) GetNbbo() bool {
	if x != nil {
		return x.Nbbo
	}
	return false
}

func (x *Quote) GetTape() int32 {
	if x != nil {
		return x.Tape
	}
	return 0
}

func (x *Quote) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type QuoteBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quotes []*Quote `protobuf:"bytes,1,rep,name=quotes,proto3" json:"quotes,omitempty"`
}

func (x *QuoteBatch) Reset() {
	*x = QuoteBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_proto_nemesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteBatch) ProtoMessage() {}

func (x *QuoteBatch) ProtoReflect() protoreflect.Message {
	mi := &file_schema_proto_nemesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteBatch.ProtoReflect.Descriptor instead.
func (*QuoteBatch) Descriptor() ([]byte, []int) {
	return file_schema_proto_nemesis_proto_rawDescGZIP(), []int{3}
}

func (x *QuoteBatch) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

var File_schema_proto_nemesis_proto protoreflect.FileDescriptor

var file_schema_proto_nemesis_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e,
	0x65, 0x6d, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x65,
	0x6b, 0x69, 0x37, 0x35, 0x2e, 0x66, 0x6c, 0x62, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x22,
	0xeb, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a,
	0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x06, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x65,
	0x6b, 0x69, 0x37, 0x35, 0x2e, 0x66, 0x6c, 0x62, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0xd5, 0x02,
	0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x69, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x69, 0x64, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x62, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x6b, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73,
	0x6b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x62, 0x62, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x62, 0x62,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x61, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x65, 0x6b, 0x69, 0x37, 0x35, 0x2e, 0x66, 0x6c, 0x62,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x06, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6b, 0x69, 0x37, 0x35, 0x2f, 0x66, 0x6c, 0x62, 0x74, 0x65,
	0x73, 0x74, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_proto_nemesis_proto_rawDescOnce sync.Once
	file_schema_proto_nemesis_proto_rawDescData = file_schema_proto_nemesis_proto_rawDesc
)

func file_schema_proto_nemesis_proto_rawDescGZIP() []byte {
	file_schema_proto_nemesis_proto_rawDescOnce.Do(func() {
		file_schema_proto_nemesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_proto_nemesis_proto_rawDescData)
	})
	return file_schema_proto_nemesis_proto_rawDescData
}

var file_schema_proto_nemesis_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_schema_proto_nemesis_proto_goTypes = []interface{}{
	(*Trade)(nil),      // 0: leki75.flbtest.v1.Trade
	(*TradeBatch)(nil), // 1: leki75.flbtest.v1.TradeBatch
	(*Quote)(nil),      // 2: leki75.flbtest.v1.Quote
	(*QuoteBatch)(nil), // 3: leki75.flbtest.v1.QuoteBatch
}
var file_schema_proto_nemesis_proto_depIdxs = []int32{
	0, // 0: leki75.flbtest.v1.TradeBatch.trades:type_name -> leki75.flbtest.v1.Trade
	2, // 1: leki75.flbtest.v1.QuoteBatch.quotes:type_name -> leki75.flbtest.v1.Quote
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_schema_proto_nemesis_proto_init() }
func file_schema_proto_nemesis_proto_init() {
	if File_schema_proto_nemesis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_proto_nemesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_nemesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_nemesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_proto_nemesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_proto_nemesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_proto_nemesis_proto_goTypes,
		DependencyIndexes: file_schema_proto_nemesis_proto_depIdxs,
		MessageInfos:      file_schema_proto_nemesis_proto_msgTypes,
	}.Build()
	File_schema_proto_nemesis_proto = out.File
	file_schema_proto_nemesis_proto_rawDesc = nil
	file_schema_proto_nemesis_proto_goTypes = nil
	file_schema_proto_nemesis_proto_depIdxs = nil
}
